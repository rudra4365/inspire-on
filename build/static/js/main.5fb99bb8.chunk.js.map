{"version":3,"sources":["Quote.js","App.js","reportWebVitals.js","index.js"],"names":["Quote","props","className","text","author","config","App","useState","quotes","setQuotes","isLoading","setIsLoading","size","loading","header","onClick","fetch","then","response","json","data","catch","type","icon","DownloadOutlined","disabled","length","bordered","dataSource","renderItem","quote","Item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAceA,MAXf,SAAeC,GACX,OACI,sBAAKC,UAAY,OAAjB,UACI,uBACN,iCACE,iCAASD,EAAME,OADjB,SACuC,+BAAOF,EAAMG,gBCFpDC,EACI,8BAwDKC,MArDf,WAEE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAkBA,OACE,sBAAKT,UAAU,MAAf,UACE,qBAAKA,UAAY,eAAjB,wBACA,cAAC,IAAD,UACA,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,CACEU,KAAK,QACLC,QAASH,EACTI,OACE,wBACEC,QAAS,kBAzBnBN,EAAU,IACVE,GAAa,QACbK,MAAMX,GACHY,MAAK,SAAUC,GACd,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLX,EAAUW,GACVT,GAAa,MAEdU,OAAM,WACLV,GAAa,OAePW,KAAK,UACLC,KAAM,cAACC,EAAA,EAAD,IACNC,SAAUf,GAAaF,EAAOkB,OAC9Bd,KAAK,QALP,0BASFe,UAAQ,EACRC,WAAYpB,EACZqB,WAAY,SAACC,GAAD,OACV,cAAC,IAAKC,KAAN,UACE,cAAC,EAAD,CAAO5B,KAAM2B,EAAM3B,KAAMC,OAAQ0B,EAAM1B,sBCzCtC4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5fb99bb8.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Quote.css'\r\n\r\nfunction Quote(props) {\r\n    return (\r\n        <div className = \"main\">\r\n            <br></br>\r\n      <span>\r\n        <strong>{props.text}</strong> &nbsp; <span>{props.author}</span>\r\n      </span>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Quote;\r\n","import React, { useState } from 'react'\nimport { Layout, Button, List } from 'antd'\nimport { DownloadOutlined } from '@ant-design/icons'\nimport './App.css';\nimport Quote from './Quote'\n\nconst config = {\n  apiUrl: 'https://type.fit/api/quotes'\n}\n\nfunction App() {\n\n  const [quotes, setQuotes] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  \n  const getQuotes = () => {\n    setQuotes([])\n    setIsLoading(true)\n    fetch(config.apiUrl)\n      .then(function (response) {\n        return response.json()\n      })\n      .then((data) => {\n        setQuotes(data)\n        setIsLoading(false)\n      })\n      .catch(() => {\n        setIsLoading(false)\n      })\n  }\n\n  return (\n    <div className=\"App\">\n      <div className = \"main-heading\">Inspire-ON</div>\n      <Layout>\n      <div className=\"container\">\n        <List\n          size=\"small\"\n          loading={isLoading}\n          header={\n            <button\n              onClick={() => getQuotes()}\n              type=\"primary\"\n              icon={<DownloadOutlined />}\n              disabled={isLoading || quotes.length}\n              size=\"large\">\n              Fetch Quotes\n            </button>\n          }\n          bordered\n          dataSource={quotes}\n          renderItem={(quote) => (\n            <List.Item>\n              <Quote text={quote.text} author={quote.author} />\n            </List.Item>\n          )}\n        />\n      </div>\n    </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}